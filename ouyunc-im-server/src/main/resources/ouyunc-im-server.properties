# ===============================================全局公共设置===============================================
# 服务端默认绑定的端口号
im.server.port=8001
# 日志级别,默认INFO; TRACE, DEBUG, INFO, WARN, ERROR
im.server.log.level=INFO
# 服务端是否启动集群，如果开启下面的ip + port 需要配置
im.server.cluster.enable=false
# 集群中的服务ip + port (这里写不写自己的本机服务ip + port 都一样), 例如：有10 台服务做集群，就把十台的服务端的IP以及端口号写上即可
# 注意这里不能使用127.0.0.1 和 localhost 来表示地址
im.server.cluster.address=10.30.1.49:8001
 # ,192.168.10.79:6002,192.168.10.79:6003,192.168.10.79:6004,192.168.10.79:6005
# ,192.168.0.111:6003,192.168.0.111:6004,192.168.0.111:6005
# 集群中，路由服务的策略，默认回溯RANDOM，BACKTRACK,建议使用BACKTRACK 容错高
im.server.cluster.route-strategy=BACKTRACK
# 集群中开始开启脑裂检测
im.server.cluster.split-brain.detection.enable=true
# 单位分钟， 集群中，开始检测脑裂的延迟时间（服务启动后多久开始进行脑裂的检测），之后就每个心跳检测一次
im.server.cluster.split-brain.detection.delay=30
# 集群中消息重试次数，消息如果不同会进行重试三次
im.server.cluster.message.retry=3
# 集群中，服务启动时，内置客户端的心跳间隔时间，单位秒，默认5秒
im.server.cluster.inner-client.heart-beat.interval=5
# 集群中，内置客户端读超时，单位秒，默认0秒钟
im.server.cluster.inner-client.idle-read-time-out=0
# 集群中，内置客户端写超时，单位秒，默认0秒钟
im.server.cluster.inner-client.idle-write-time-out=0
# 集群中，内置客户端读写超时，单位秒，默认5秒钟
im.server.cluster.inner-client.idle-read-write-time-out=5
# 集群中，内置客户端的channel pool 的核心连接数，默认5，如果空闲则保持该连接
im.server.cluster.inner-client.channel.pool.core-connection=5
# 集群中，内置客户端的channel pool 的最大连接数，默认100
im.server.cluster.inner-client.channel.pool.max-connection=100
# 集群中客户端channel pool 中，等待连接池连接的最大时间，单位毫秒, 默认10s
im.server.cluster.inner-client.channel.pool.acquire-timeout-millis=10000
# 集群中客户端channel pool 中，在请求获取/建立连接大于maxConnections数时，创建等待建立连接的最大定时任务数量。例如maxConnections=2，此时已经建立了2连接，但是没有放入到连接池中，接下来的请求就会放入到一个后台执行的定时任务中，如果到了时间连接池中还没有连接，就可以建立不大于maxPendingAcquires的连接数，如果连接池中有连接了就从连接池中获取
im.server.cluster.inner-client.channel.pool.max-pending-acquires=100000
# 集群中内部客户端，发送syn最大等待3个heart-beat.interval时间段，如果没有及时得到响应则进行本地下线
im.server.cluster.inner-client.heart-beat.wait-retry=3


# 全局是否开启用户认证，主要校验用户的登录状态以及授权范围，默认开， true-开， false-关
im.server.auth.enable=true
# 是否开启消息数据库存储，默认true
im.server.message.db.enable=true
# 是否开启好友在线状态的实施推送，默认false，只推送反向好友，不推送群（群成员状态可以按需拉取或定时拉取）
im.server.friend.online.push.enable=false

# qos的具体实现;需要客户端配合使用 是否开启ack，确保消息可靠，注意：这样会影响性能，可以根据具体业务进行合理配置， 默认不开启ack
im.server.acknowledge-mode.enable=true
# im 是否开启，已读回执(群聊和私聊)，需要客户端配合，默认否
im.server.read-receipt.enable=true


# 全局是否开启心跳，用来检测连接上的客户端需要发送心跳包（只针对外部客户端），默认开启
im.server.heart-beat.enable=true
# 单位秒 ， 外部客户端与服务端的心跳超时时间，如果服务端未收到客户端的心跳包在一定策略下会进行重试等待，最后如果如果没有连接上则将该客户端下线处理
im.server.heart-beat.timeout=15
# 外部客户端，心跳重试等待次数，默认3次，超过3次没有心跳则关闭外部客户端channel  不能为负数
im.server.heart-beat.wait-retry=3



# 全局是否开启SSL/TLS, 默认否
im.server.ssl.enable=false
# SSL/TLS 证书文件路径路径
im.server.ssl.certificate=ssl/m.ouyunc.com.pem

# SSL/TLS 私钥文件路径
im.server.ssl.private-key=ssl/m.ouyunc.com_pkcs8.key


# ========================================boss 线程组设置相关=============================================
# boss 线程组的线程个数
im.server.boss.threads=1
# 具体相关属性配置 请查看io.netty.channel.ChannelOption
# 指定了内核为此套接口排队的最大连接个数。对于给定的监听套接口，内核要维护两个队列:
# 已连接队列：已完成连接队列三次握手已完成，内核正等待进程执行accept的调用中的数量
# 未连接队列：未完成连接队列一个SYN已经到达，但三次握手还没有完成的连接中的数量
im.server.boss.option.so-backlog=512
# 地址复用，默认值False
im.server.boss.option.so-reuseaddr=true



# ========================================worker 线程组设置相关===========================================
# worker 线程组的线程个数 NettyRuntime.availableProcessors() * 2
im.server.worker.threads=8
# 置连接活动保持连接状态
im.server.worker.child-option.so-keepalive=true
# 激活或者禁止TCP_NODELAY套接字选项，它决定了是否使用Nagle算法。如果是时延敏感型的应用，建议关闭Nagle算法。
im.server.worker.child-option.tcp-nodelay=true
# 地址复用，默认值False
im.server.worker.child-option.so-reuseaddr=true




